version: '3.8'

services:
  db:
    image: postgres:13-alpine 
    restart: always 
    environment:
      POSTGRES_DB: Desafio_trindtech
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 260208
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Desafio_trindtech"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "3333:3333"
    environment:
      DB_DIALECT: postgres
      DB_HOST: db
      DB_USER: postgres
      DB_PASS: 260208
      DB_NAME: Desafio_trindtech
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy 
    volumes:
        - ./backend:/app
        - /app/node_modules
    command: ["sh", "-c", "/wait-for-it.sh db:5432 -- npm run dev"] 

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    ports:
      - "80:80"
      - "5173:5173"
    depends_on:
      - backend

volumes:
  db_data: